apiVersion: v1
kind: Service
metadata:
  name: happy-cms-database
  labels:
    monokle.io/demo: kustomize-happy-cms
spec:
  selector:
    app: happy-cms-database
  ports:
    - name: pg
      protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: happy-cms-database-headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: happy-cms-database
spec:
  serviceName: database-headless
  replicas: 1
  selector:
    matchLabels:
      app: happy-cms-database
  template:
    metadata:
      name: happy-cms-database
      labels:
        app: happy-cms-database
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:11.9.0-debian-10-r1
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
            readOnlyRootFilesystem: true
          envFrom:
            - configMapRef:
                name: database-env
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres
            initialDelaySeconds: 30
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U postgres
            initialDelaySeconds: 15
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: database-data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: database-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "5Gi"
